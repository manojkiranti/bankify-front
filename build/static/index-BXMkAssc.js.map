{"version":3,"file":"index-BXMkAssc.js","sources":["../../src/pages/loans/routes/PersonalLoan.tsx","../../src/pages/loans/routes/LoanRequest.tsx","../../src/pages/loans/routes/index.tsx"],"sourcesContent":["import { useApproveRequestMutation, useFetchServiceListQuery } from \"@/store/apis/coreApi\";\nimport { displayError, displaySuccess } from \"@/utils/displayMessageUtils\";\nimport { Alert, Button, Spin, Table } from \"antd\";\nimport { ColumnsType } from 'antd/es/table';\n\ninterface ServiceRequest {\n  id: number; // Assuming each result has a unique 'id'\n  account_number: string;\n  status: string;\n  created_at: string;\n  // Add other fields based on your actual data structure\n}\n\n\n\ninterface PersonalLoanProps {\n  loanType: string;\n}\nconst PersonalLoan: React.FC<PersonalLoanProps> = ({ loanType }) => {\n  \n  const columns: ColumnsType<ServiceRequest> = [\n    // {\n    //   title: 'ID',\n    //   dataIndex: 'id',\n    //   key: 'id',\n  \n    // },\n    {\n      title: 'Account Number',\n      dataIndex: 'account_number',\n      key: 'account_number'\n    },\n    {\n      title: 'Account Name',\n      dataIndex:\"account_name\",\n      key: 'account_name'\n    },\n    // {\n    //   title: 'Email',\n    //   dataIndex: \"email\",\n    //   key: 'email'\n    // },\n    {\n      title: 'Mobile Number',\n      dataIndex:\"phone\",\n      key: 'phone'\n    },\n    {\n      title: 'Loan Amount',\n      dataIndex: [\"request_body\",\"prop_values\", \"loan_amount\"],\n      key: 'loan_amount'\n    },\n    {\n      title: 'Loan Amount',\n      dataIndex: [\"request_body\",\"prop_values\", \"payback_period\"],\n      key: 'payback_period',\n      render: (value: string) => `${value} years`,\n    },\n    {\n      title: 'Request channel',\n      dataIndex: [\"request_body\",\"channel\"],\n      key: 'channel'\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      filters: [\n        { text: 'Initiated', value: 'INITIATED' },\n        { text: 'Submitted', value: 'SUBMITTED' },\n        { text: 'Completed', value: 'COMPLETED' },\n      ],\n  \n    },\n    \n    {\n      title: 'Requested At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (date: string) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: 'Action',\n      dataIndex: '',\n      key: 'x',\n      render: (value) => {\n        if( value.status === 'SUBMITTED') {\n          return <Button type=\"primary\" onClick={() => handleServiceApprove(value.id)} disabled={approveRequestLoading} loading={approveRequestLoading}>Approve</Button>\n        } else {\n          return <a>View</a>\n        }\n        \n      },\n    },\n    // Add more columns as needed\n  ];\n\n  const { data: serviceResponse, isLoading, isError, error, refetch } = useFetchServiceListQuery({\n    // service_name: \"MOBILE_BANKING\",\n    request_type: loanType,\n  });\n  const [approveRequest, {isLoading: approveRequestLoading }] = useApproveRequestMutation();\n\n  // Extract the results array or set it to an empty array if data is undefined\n  const tableData: ServiceRequest[] = serviceResponse?.data?.data || [];\n\n  // Handle loading state\n  if (isLoading) {\n    return (\n      <div style={{ textAlign: 'center', padding: '50px' }}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  // Handle error state\n  if (isError) {\n    return (\n      <Alert\n        message=\"Error\"\n        description={error?.toString() || \"An error occurred while fetching data.\"}\n        type=\"error\"\n        showIcon\n      />\n    );\n  }\n  const handleServiceApprove = (id:number) => {\n\n    approveRequest({id}).unwrap()\n    .then((res) => {\n      displaySuccess(res.message)\n      refetch();\n    }).catch((err) => {\n      displayError(err.message)\n    });\n  }\n  return (\n    <div>\n      {/* <Typography.Title level={4}>New Mobank Registration</Typography.Title> */}\n      <Table\n        columns={columns}\n        dataSource={tableData}\n        rowKey=\"id\" // Ensure each row has a unique key\n        bordered\n        pagination={{\n          pageSize: 10, // Adjust page size as needed\n          total: serviceResponse?.data.total, // Total number of records\n          showSizeChanger: false, // Hide page size changer if not needed\n        }}\n        // Optional: Add more table props like onChange for sorting/filtering\n      />\n    </div>\n  );\n};\n\nexport default PersonalLoan;","import React from 'react';\nimport { Tabs } from 'antd';\nimport type { TabsProps } from 'antd';\n\nimport PersonalLoan from './PersonalLoan';\n\nconst onChange = (key: string) => {\n  console.log(key);\n};\n\nconst items: TabsProps['items'] = [\n  {\n    key: '1',\n    label: 'Home Loan',\n    children: <PersonalLoan loanType='HOME_LOAN' />,\n  },\n  {\n    key: '2',\n    label: 'Gold Loan',\n    children: <PersonalLoan loanType='GOLD_LOAN'/>,\n  },\n  {\n    key: '3',\n    label: 'Loan Against Share',\n    children: <PersonalLoan loanType='LOAN_AGAINST_SHARE'/>,\n  },\n  // {\n  //   key: '4',\n  //   label: 'Credit Card Loan',\n  //   children: <PersonalLoan loanType='credit_card_loan'/>,\n  // }\n];\n\nconst LoanRequest: React.FC = () => <Tabs defaultActiveKey=\"1\" items={items} onChange={onChange} />;\n\nexport default LoanRequest;","import { Navigate, Route, Routes } from 'react-router-dom';\nimport LoanRequest from './LoanRequest';\n\n\nexport const LoanRoutes = () => {\n    return (\n      <Routes>\n        <Route path=\"\" element={<LoanRequest />} />\n        <Route path=\"*\" element={<Navigate to=\".\" />} />\n      </Routes>\n    );\n  };"],"names":["PersonalLoan","loanType","columns","value","date","jsx","Button","handleServiceApprove","approveRequestLoading","serviceResponse","isLoading","isError","error","refetch","useFetchServiceListQuery","approveRequest","useApproveRequestMutation","tableData","Spin","Alert","id","res","displaySuccess","err","displayError","Table","onChange","key","items","LoanRequest","Tabs","LoanRoutes","Routes","Route","Navigate"],"mappings":"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"}